// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id
  username          String
  globalName        String?
  joinedAt          Int
  lastActive        Int
  bot               Boolean
  userRole          UserRole[]
  userEvent         UserEvent[]
  message           Message[]
  messageReaction      MessageReaction[]
}

model Role {
  id                Int     @id
  name              String
  createdTimestamp  Int
  userRole          UserRole[]
}

model UserRole {
  user              User @relation(fields: [userId], references: [id])
  userId            Int
  role              Role @relation(fields: [roleId], references: [id])
  roleId            Int

  @@id([userId, roleId])
}

model AudioEvent {
  id                Int @id
  channelId         Int
  channel           Channel @relation(fields: [channelId], references: [id])
  creatorId         Int
  name              String
  description       String?
  status            EventStatus @relation(fields: [statusId], references: [id])
  statusId          Int
  startTimestamp    Int
  endTimestamp      Int
  userCount         Int
  userEvent         UserEvent[]

}

model EventStatus {
  id                Int @id
  name              String
  event             AudioEvent[]
  eventId           Int
}

model UserEvent {
  event             AudioEvent @relation(fields: [eventId], references: [id])
  eventId           Int
  user              User @relation(fields: [userId], references: [id])
  userId            Int

  @@id([userId, eventId])
}

model Message {
  id Int @id
  channel Channel @relation(fields: [channelId], references: [id])
  channelId Int
  userId Int
  user User @relation(fields: [userId], references: [id])
  createdTimestamp Int
  messageReaction MessageReaction[]
}

model Channel {
  id Int @id
  name String
  url String
  message Message[]
  audioEvent AudioEvent[]
  messageReaction MessageReaction[]
}

model MessageReaction {
  user User @relation(fields: [userId], references: [id])
  userId Int
  message Message @relation(fields: [messageId], references: [id])
  messageId Int
  channel Channel @relation(fields: [channelId], references: [id])
  channelId Int

  @@id([userId, messageId])
}
